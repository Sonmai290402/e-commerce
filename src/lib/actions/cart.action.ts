import { TCartItem } from "@/types";
import { mutate } from "swr";

export async function fetchCart() {
  try {
    const res = await fetch("/api/cart", { cache: "no-store" });

    if (!res.ok) throw new Error("Failed to fetch cart");

    return await res.json();
  } catch (error) {
    console.error("L·ªói khi t·∫£i gi·ªè h√†ng:", error);
    return JSON.parse(localStorage.getItem("cart") || "[]"); // D√πng cache n·∫øu API l·ªói
  }
}

// üõçÔ∏è Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
export async function addToCart(item: TCartItem) {
  try {
    const res = await fetch("/api/cart", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(item),
    });

    if (!res.ok) throw new Error("Failed to add item");

    await mutate("/api/cart", { revalidate: false });
  } catch (error) {
    console.error("üî• Error adding item:", error);
  }
}

export async function updateCartItem(
  _id: string,
  action: "increase" | "decrease"
) {
  try {
    const res = await fetch(`/api/cart/${_id}`, {
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ action }),
    });

    if (!res.ok) throw new Error("C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng th·∫•t b·∫°i");

    await mutate("/api/cart"); // C·∫≠p nh·∫≠t l·∫°i gi·ªè h√†ng
  } catch (error) {
    console.error("L·ªói c·∫≠p nh·∫≠t gi·ªè h√†ng:", error);
  }
}

export async function removeCartItem(_id: string) {
  try {
    const res = await fetch(`/api/cart/${_id}`, {
      method: "DELETE",
    });

    if (!res.ok) throw new Error("X√≥a s·∫£n ph·∫©m th·∫•t b·∫°i");

    await mutate("/api/cart"); // C·∫≠p nh·∫≠t l·∫°i gi·ªè h√†ng
  } catch (error) {
    console.error("L·ªói x√≥a s·∫£n ph·∫©m:", error);
  }
}
